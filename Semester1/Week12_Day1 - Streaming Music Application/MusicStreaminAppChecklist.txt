
- Implement Genre enum and refactor the existing classes to make use of it
	The Song class should have an instance variable for a Genre; this requires you to also modify the constructors
	The MusicStreamingService class also has to be changed to reflect the refactored Song class



- Implement the User class:
	- AddSongToFavorites() should add, based on the value of the parameters, to the favorite list. Note that the amount of
	  favorite songs can not exceed MAX_SONGS_IN_FAVORITES
	- RemoveSongFromFavorites() should remove, based on the value of the parameter, from the favorite list
	- GetFavoriteSongs() should return a string with all the songs bookmarked as favorite. For example as:
		Favourite songs of John Doe:
		- ID 01: Queen - Bohemian Rhapsode (354 seconds)
		- ID 04: Queen – Don’t Stop Me Now (218 seconds)
		or
		Jane Jackson has no favorite songs



- Complete the StreamingMusicService class:
	- AddUser() should create and add a User-object based on the value of the parameters
	- GetUser() should return the correct User-object, if any, based on the value of the parameter
	- GetUsers() should return all the User-objects as an array
	- GetInfo() should be modified to also include the number of users. For example:
		Streaming Music service: YoMusicfy (5 songs & 2 users)




- Create the GUI by adding controls by using a TabControl among other controls to:
	- View all song(s)
	- Add a new song; make sure the text in the title bar is updated with new info
	- View all users(s)
	- Add a new user; make sure the text in the title bar is updated with new info
	- Add a song as favourite to a user



- Additional Features:
	- Modify the GetInfo()-method in class Song to show the duration as <minutes>:<seconds>. For example: 
    		ID 01: Queen - Bohemian Rhapsode (5:54)
	Can you refactor the application by including a Playlist-class. This class should make it possible to allow users to have 
	one or more playlists. Make the application work with this new class to, for example, modify how a song is added as 
	favorite (i.e. to the appropriate playlist), add playlist to a user, etc.


